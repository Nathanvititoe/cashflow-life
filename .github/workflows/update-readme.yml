# only runs when something is merged into main
---
name: "Auto Update README"

on:
  workflow_run:
    workflows: ["Expo Review"]
    types:
      - completed
  workflow_dispatch:

permissions:
  contents: write

jobs:
  preview:
    name: Update README
    runs-on: ubuntu-latest
    if: >
      (github.event_name == 'workflow_run' &&
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.head_branch == 'main') ||
      (github.event_name == 'workflow_dispatch')

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x

      - name: Install dependencies
        run: |
          rm -rf node_modules
          rm -f package-lock.json
          npm install --no-package-lock
          npx expo install --fix

      - name: Run README Update Script
        run: npm run update-readme

      - name: Get Latest Commit Message
        id: last_commit
        run: |
          LATEST_MSG=$(git log -1 --pretty=format:%s)
          echo "LAST_COMMIT_MSG=$LATEST_MSG" >> $GITHUB_ENV

      - name: Commit and Push Changes to New Branch
        run: |
          git checkout -b auto-update-readme-${{ github.run_id }}
          git add .
          git commit -m "updating README for commit: ${{ env.LAST_COMMIT_MSG }}"
          git push origin auto-update-readme-${{ github.run_id }}

      - name: Create Pull Request
        id: create_pr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: auto-update-readme-${{ github.run_id }}
          title: "Auto-update README"
          body: "This PR updates the README automatically."
          base: main
          labels: "auto-merge"

      - name: Auto-Merge the PR
        if: ${{ steps.create_pr.outputs.pull-request-number }}
        run: |
          gh pr merge ${{ steps.create_pr.outputs.pull-request-number }} \
            --merge --delete-branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
